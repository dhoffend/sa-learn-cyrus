# Configuration for sa-learn-cyrus
#
# mr -- 2020-04-04
#
# -------------------------------------------------------
# global parameters
#
[global]

# level of verbosity (0 .. 3)?
verbose = 2

# Don't excute commands, show only what would be executed,
# Change this to 'no' after testing.
simulate = yes

# Prepend log output with a tag (date, time, pid)? 
# Choose 'no' if you prefer to pipe the output to syslog
# (default is 'yes')
log_with_tag = yes

# -------------------------------------------------------
# Mailbox
#
[mailbox]

# List of mailboxes/users which will be considered.
# If this list is empty all mailboxes will be searched.
# The values in include_list are matched against both the qualified and unqualified
# username (i.e. with and without domain part, if domains are used).
#include_list = ''

# If include_list is empty, only mailboxes matching this pattern will be considered
# If include_regexp is empty, no mailbox will be considered! Use '.*' to match any
# mailbox.
include_regexp = '.*'

# List of mailboxes/users which will be ignored. This is applied to the results that
# pass include_regexp.
# The values in exclude_list are matched against both the qualified and unqualified
# username (i.e. with and without domain part, if domains are used).
#exclude_list = ''

# Mailboxes matching this pattern will be ignored. This is applied to the results that
# pass include_regexp and exclude_list.
#exclude_regexp = ''

# Spam folder relative to INBOX (cyrus nomenclature: e.g. 'junk.Spam')
spam_folder = 'Junk.Learn-as-Spam'

# Ham folder relative to INBOX (cyrus nomenclature: e.g. 'junk.Ham')
ham_folder = 'Junk.Learn-as-Ham'

# Remove spam after feeding it to SA
remove_spam = yes

# Remove ham after feeding it to SA
remove_ham = yes

# -------------------------------------------------------
# Spamassassin
#
[sa]

# run sa-learn in debug mode (useful to examine problems)
#debug = yes

# Path with system-wide SA preferences
#site_config_path = /etc/spamassassin

# Path to sa-learn
#learn_cmd = /usr/bin/sa-learn

# Bayes storage mechanism (berkely|sql)
#   berkely: Berkely DB (default) 
#   sql: SQL Database
#bayes_storage = berkely

# SA configuration file. 
# Used to get the Bayes database path if bayes_storage = berkely
# Required to run sa-learn. 
#prefs_file = /etc/spamassassin/local.cf

# Should permissions of DB files be fixed?
# Ignored unless bayes_storage = berkely
#fix_db_permissions = yes

# SA user and group (required if fix_db_permissions = yes)
#user = mail
#group = mail

# Skip synchronization after every change of database, but sync once 
# after all messages have been learned. 
# May speed up learning from many folders.
#sync_once = yes

# Use this if you use the --virtual-config-dir option of spamd (it
# needs to match exactly). See the spamd man page for more
# information.
#virtual_config_dir = ''

# -------------------------------------------------------
# IMAP
#
[imap]

# Base directory of IMAP spool (below that mailboxes are located)
# Ignored when Kolab integration is enabled.
base_dir = /var/spool/cyrus/mail

# If base_dir has subdivisions with initial letters of mailbox names
# set initial_letter = yes (default), otherwise choose no.
# Ignored when Kolab integration is enabled.
# Example for joe's mailbox:
#   yes: <base_dir>/j/user/joe/
#    no: <base_dir>/user/joe/
initial_letter = yes

# If your cyrus spool uses domain hierarchy give a list of domains
# Example for mailbox fritz@bar.org and joe@foo.com
#   <base_dir>/domain/b/bar.org/f/fritz
#   <base_dir>/domain/f/foo.com/j/joe
# domains = foo.com bar.org
#
# If you don't use Cyrus's domain support leave the entry empty.
# The initial_letter option (see above) is applied to domains, too.    
# 
# When Kolab integration is enabled, leave empty to enumerate all domains or provide a
# list of domains to limit enumeration to those domains.
domains = ''

# Choose 'unixhierarchysep = yes' if Cyrus is configured to accept usernames
# like 'hans.mueller.somedomain.tld'. This must match the value used in imapd.conf.
#unixhierarchysep = yes

# imap command to purge mail messages
#purge_cmd = /usr/lib/cyrus/bin/ipurge

# imap command to obtain mailbox file system path
#mbpath_cmd = /usr/lib/cyrus/bin/mbpath

# imap command to examine mailbox contents
#mbexamine_cmd = /usr/lib/cyrus/bin/mbexamine

# Cyrus-IMAPd user
user = cyrus

# -------------------------------------------------------
# Kolab
#
[kolab]

# enable Kolab integration
#enable = yes

# Kolab admin utility path
#util_cmd = /usr/sbin/kolab

# Kolab command to list mailboxes
#mblist_subcmd = list-mailboxes

